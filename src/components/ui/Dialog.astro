---
import Button from "./Button.astro";
import Checkbox from "./Checkbox.astro";
import TextArea from "./TextArea.astro";
import TextInput from "./TextInput.astro";
---

<dialog
  class="bg-theme-base text-theme-text shadow-black/60 shadow-xl rounded-md w-full max-w-sm backdrop:bg-black/60"
>
  <div class="p-4 sm:p-8 grid gap-6">
    <form class="grid gap-4" id="add-form">
      <h2 class="text-xl text-theme-accent font-bold leading-tight">
        Add a Link
      </h2>
      <TextInput name="Link Title" inputId={Math.random()} />
      <TextArea name="Link Description" id={Math.random()} />
      <TextInput
        name="Link URL"
        inputId={Math.random()}
        title="Must start with https://"
        pattern="https?://.*"
      />
      <Checkbox checked={false} inputId={Math.random()} name="isRead" />
      <div class="flex gap-4 flex-wrap">
        <Button intent="primary" id="close-dialog" type="button">Close</Button>
        <Button intent="accent" type="submit">Add Link</Button>
      </div>
    </form>
  </div>
</dialog>

<script>
  import sanitize from "sanitize-html";

  // query selectors
  const addForm = document.querySelector("#add-form") as HTMLFormElement;
  const openDialogBtn = document.getElementById(
    "open-dialog"
  ) as HTMLButtonElement;
  const closeDialogBtn = document.getElementById(
    "close-dialog"
  ) as HTMLButtonElement;
  const dialog = document.querySelector("dialog") as HTMLDialogElement;

  // dialog
  openDialogBtn.addEventListener("click", () => dialog.showModal());

  closeDialogBtn.addEventListener("click", () => dialog.close());

  dialog.addEventListener("click", (e) => {
    if (e.target === e.currentTarget) {
      dialog.close();
    }
  });

  // form submit
  addForm.addEventListener("submit", async (e) => {
    e.preventDefault();
    try {
      const formData = new FormData(addForm);
      const title = sanitize(formData.get("link-title") as string);
      const description = sanitize(formData.get("link-description") as string);
      const url = sanitize(formData.get("link-url") as string);
      const isRead = formData?.get("isRead") === "on" ? true : false ?? false;

      const req = await fetch("/api/addLink.json", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          title,
          description,
          url,
          isRead,
        }),
      });

      if (!req.ok) {
        throw new Error("Req was not okay!");
      }

      const res = await req.json();
      if (res.success) {
        addForm.reset();
        dialog.close();
        location.reload();
      } else {
        throw new Error(res.message);
      }
    } catch (e) {
      console.log(e);
      if (e instanceof Error) {
        alert(e.message);
      }
    }
  });
</script>
